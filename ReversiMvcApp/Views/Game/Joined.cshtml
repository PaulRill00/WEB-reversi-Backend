@using ReversiMvcApp.Controllers
@model IEnumerable<ReversiRestAPI.Models.API.APIGame>
@inject PlayerController PlayerController

@{
    ViewData["Title"] = "Joined";
}

<h1>Joined</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ID)
            </th>
            <th>
                Game Host
            </th>
            <th>
                Game Participant
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ID)
            </td>
            <td>
                @{
                    var player1 = PlayerController.GetPlayer(item.Player1Token);
                    @Html.Raw(player1.Name)
                }
            </td>
            <td>
                @{
                    var player2 = PlayerController.GetPlayer(item.Player2Token);
                    @Html.Raw(player2?.Name ?? "Not joined")
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                <a asp-action="Game" asp-route-token="@item.Token">View</a>
            </td>
        </tr>
        }
    </tbody>
</table>
